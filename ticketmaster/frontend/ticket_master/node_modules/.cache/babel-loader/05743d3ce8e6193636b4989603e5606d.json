{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\tkazi\\\\Downloads\\\\ticket-master-master\\\\frontend\\\\ticket_master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\tkazi\\\\Downloads\\\\ticket-master-master\\\\frontend\\\\ticket_master\\\\src\\\\components\\\\EventForm.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport { Table, Container, Input, Button, Label, Form, FormGroup } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport DatePicker from 'react-datepicker';\nimport Moment from 'react-moment';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport AppNav from './AppNav';\n\nclass EventForm extends Component {\n  constructor(props) {\n    super(props);\n    this.emptyItem = {\n      name: '',\n      event_date: new Date()\n    };\n    this.state = {\n      name: '',\n      date: new Date(),\n      isLoading: true,\n      events: [],\n      item: this.emptyItem\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleDateChange = this.handleDateChange.bind(this);\n    this.editEvent = this.editEvent.bind(this);\n  }\n\n  async handleSubmit(event) {\n    const item = this.state.item;\n    await fetch(\"/api/events\", {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(item)\n    });\n    event.preventDefault();\n    this.props.history.push(\"/events\");\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    let item = _objectSpread({}, this.state.item);\n\n    item[name] = value;\n    this.setState({\n      item\n    });\n  }\n\n  handleDateChange(date) {\n    let item = _objectSpread({}, this.state.item);\n\n    item.event_date = date;\n    this.setState({\n      item\n    });\n  }\n\n  async remove(id) {\n    const response = await fetch(\"/api/events/\".concat(id), {\n      method: 'DELETE',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    });\n\n    try {\n      const body = await response.json();\n\n      if (body.httpStatus === \"BAD_REQUEST\") {\n        console.log(body.message);\n      } else {\n        let updatedEvents = [...this.state.events].filter(i => i.id !== id);\n        this.setState({\n          events: updatedEvents\n        });\n      }\n    } catch (e) {}\n\n    this.componentDidMount();\n  }\n\n  editEvent(id) {\n    window.localStorage.setItem(\"eventId\", id);\n    this.props.history.push('/editEvent');\n  }\n\n  async componentDidMount() {\n    const response = await fetch('/api/events');\n    const body = await response.json();\n    this.setState({\n      events: body,\n      isLoading: false\n    });\n  }\n\n  render() {\n    const title = React.createElement(\"h3\", {\n      style: {\n        marginTop: '10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Event Form\");\n    const _this$state = this.state,\n          events = _this$state.events,\n          isLoading = _this$state.isLoading;\n    if (isLoading) return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Loading...\");\n    let rows = events.map(event => React.createElement(\"tr\", {\n      key: event.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, event.name), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(Moment, {\n      date: event.event_date,\n      format: \"DD/MM/YYYY\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(Button, {\n      size: \"sm\",\n      color: \"secondary\",\n      onClick: () => this.editEvent(event.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Modify\")), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(Button, {\n      size: \"sm\",\n      color: \"danger\",\n      onClick: () => this.remove(event.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Delete\"))));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(AppNav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, title, React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Title\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"name\",\n      id: \"name\",\n      value: this.state.item.name,\n      onChange: this.handleChange,\n      autoComplete: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"event_date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Date\"), React.createElement(DatePicker, {\n      selected: this.state.item.event_date,\n      onChange: this.handleDateChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"primary\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Create\"), ' ', React.createElement(Button, {\n      color: \"secondary\",\n      tag: Link,\n      to: \"/admin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Cancel\")))), '', React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Events List\"), React.createElement(Table, {\n      className: \"mt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      width: \"30%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"Date\"), React.createElement(\"th\", {\n      width: \"10%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"Action\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, rows))));\n  }\n\n}\n\nexport default EventForm;","map":{"version":3,"sources":["C:/Users/tkazi/Downloads/ticket-master-master/frontend/ticket_master/src/components/EventForm.js"],"names":["React","Component","Table","Container","Input","Button","Label","Form","FormGroup","Link","DatePicker","Moment","AppNav","EventForm","constructor","props","emptyItem","name","event_date","Date","state","date","isLoading","events","item","handleSubmit","bind","handleChange","handleDateChange","editEvent","event","fetch","method","headers","body","JSON","stringify","preventDefault","history","push","target","value","setState","remove","id","response","json","httpStatus","console","log","message","updatedEvents","filter","i","e","componentDidMount","window","localStorage","setItem","render","title","marginTop","rows","map"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Table, Container, Input, Button, Label, Form, FormGroup } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport DatePicker from 'react-datepicker';\r\nimport Moment from 'react-moment';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nimport AppNav from './AppNav';\r\n\r\nclass EventForm extends Component {\r\n\r\n    emptyItem = {\r\n        name: '',\r\n        event_date: new Date()\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: '',\r\n            date: new Date(),\r\n            isLoading: true,\r\n            events: [],\r\n            item: this.emptyItem\r\n        }\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleDateChange = this.handleDateChange.bind(this);\r\n        this.editEvent = this.editEvent.bind(this);\r\n    }\r\n\r\n    async handleSubmit(event) {\r\n        const item = this.state.item;\r\n        await fetch(`/api/events`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(item)\r\n        });\r\n        event.preventDefault();\r\n        this.props.history.push(\"/events\");\r\n    }\r\n\r\n    handleChange(event) {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        let item = {...this.state.item};\r\n        item[name] = value;\r\n        this.setState({ item });\r\n    }\r\n    \r\n    handleDateChange(date) {\r\n        let item = {...this.state.item};\r\n        item.event_date = date;\r\n        this.setState({ item });\r\n    }\r\n\r\n    async remove(id) {\r\n        const response = await fetch(`/api/events/${id}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        });\r\n        try {\r\n            const body = await response.json();\r\n        if(body.httpStatus === \"BAD_REQUEST\") {\r\n            console.log(body.message);\r\n        } else {\r\n            let updatedEvents = [...this.state.events].filter(i => i.id !== id);\r\n            this.setState({ events: updatedEvents });\r\n        }\r\n        } catch(e) {} \r\n        this.componentDidMount();\r\n    }\r\n\r\n    editEvent(id) {\r\n        window.localStorage.setItem(\"eventId\", id);\r\n        this.props.history.push('/editEvent');\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const response = await fetch('/api/events');\r\n        const body = await response.json();\r\n        this.setState({events: body, isLoading: false});\r\n    }\r\n\r\n    render() {\r\n        const title = <h3 style={{marginTop: '10px'}}>Event Form</h3>\r\n        const {events, isLoading} = this.state;\r\n\r\n        if(isLoading)\r\n             return (<div>Loading...</div>);\r\n\r\n        let rows = events.map(event => \r\n            <tr key={event.id}>\r\n                <td>{event.name}</td>\r\n                <td><Moment date={event.event_date} format=\"DD/MM/YYYY\" /></td>\r\n                <td><Button size=\"sm\" color=\"secondary\" onClick={() => this.editEvent(event.id)} >Modify</Button></td>\r\n                <td><Button size=\"sm\" color=\"danger\" onClick={() => this.remove(event.id)}>Delete</Button></td>\r\n            </tr>   \r\n        )\r\n\r\n        return (\r\n            <div>\r\n                <AppNav />\r\n                <Container>\r\n                    {title}\r\n                    <Form onSubmit={this.handleSubmit}>\r\n                        <FormGroup>\r\n                            <Label for=\"name\">Title</Label>\r\n                            <Input type=\"text\" name=\"name\" id=\"name\" value={this.state.item.name}\r\n                                onChange={this.handleChange} autoComplete=\"name\" />\r\n                        </FormGroup>\r\n\r\n                        <FormGroup>\r\n                            <Label for=\"event_date\">Date</Label>\r\n                            <DatePicker selected={this.state.item.event_date} onChange={this.handleDateChange} />\r\n                        </FormGroup>\r\n                        \r\n                        <FormGroup>\r\n                            <Button color=\"primary\" type=\"submit\">Create</Button>{' '}\r\n                            <Button color=\"secondary\" tag={Link} to=\"/admin\">Cancel</Button>\r\n                        </FormGroup>\r\n                    </Form>\r\n                </Container>\r\n\r\n                {''}\r\n                    <Container>\r\n                        <h3>Events List</h3>\r\n                        <Table className=\"mt-4\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th width=\"30%\">Name</th>   \r\n                                    <th>Date</th>\r\n                                    <th width=\"10%\">Action</th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {rows}\r\n                            </tbody>\r\n                        </Table>\r\n                    </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EventForm;"]},"metadata":{},"sourceType":"module"}